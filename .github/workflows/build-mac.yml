name: Build & Release Electron App

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger

jobs:
  build-mac:
    runs-on: macos-latest  # ✅ Run on macOS VM

    steps:
      - name: 🛠 Checkout Code
        uses: actions/checkout@v3

      - name: 🏗 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 🐍 Install Python (Required for App)
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: 📦 Install Python Dependencies (PyPDF2, etc.)
        run: |
          python -m pip install --upgrade pip
          python -m pip install PyPDF2

      - name: 📦 Install Node.js Dependencies
        run: npm install

      - name: 🚀 Build macOS App
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npx electron-builder --mac

      - name: 📤 Upload macOS Build to GitHub Releases
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npx electron-builder --mac --publish always

  build-windows:
    runs-on: windows-latest  # ✅ Windows Build Environment

    steps:
      - name: 🛠 Checkout Code
        uses: actions/checkout@v3

      - name: 🏗 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 🐍 Install Python (Required for App)
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: 📦 Install Python Dependencies (PyPDF2, etc.)
        run: |
          python -m pip install --upgrade pip
          python -m pip install PyPDF2

      - name: 📦 Install Node.js Dependencies
        run: npm install

      - name: 🚀 Build Windows App
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npx electron-builder --win

      - name: 📤 Upload Windows Build to GitHub Releases
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npx electron-builder --win --publish always
